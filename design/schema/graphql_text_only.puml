@startuml

hide empty members
hide circle

class AIO_Grant {
  * referenceId: String!
  title: String!
  grantId: String!
  fundingAgency: Organization!
  awardee: Organization!
  reportSymbol: String
  priorityOrder: Int
}

class AIO_Protocol {
  * referenceId: String!
  title: String!
  shortTitle: String!
  urlResource: UrlResource!
  priorityOrder: Int
}

class Contact {
  email: String!
  person: Person!
  priorityOrder: Int
}

class CRID {
  registry: CRIDRegistry!
  symbol: String!
}

class CRIDRegistry {
  * referenceId: String!
  description: String!
}

class DataCollection {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  accessControl: String
  completionState: String
  lastUpdatedAtDate: Date
  publication: [Publication]
  webResources: [UrlResource]
  modality: [Modality]
  technique: [Technique]
  specimenType: [SpecimenType]
  specimenCount: [SpecimenCount]
  species: [Species]
  priorityOrder: Int
}

class DataCollectionProject {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  doiSymbol: String
  citation: String
  informationWebResource: UrlResource
  publisher: Publisher
  modality: [Modality]
  technique: [Technique]
  specimenType: [SpecimenType]
  species: [Species]
  highlightedWebResources: [UrlResource]
  grant: [AIO_Grant]
  license: [License]
  publication: [Publication]
  dataPublicationYear: [String]
  protocol: [AIO_Protocol]
  relatedProjects: [RelatedDataCollectionProject]
  subProgram: [SubProgram]
  dataCollection: [DataCollection]
  dataCreator: [DataCreator]
  dataContributor: [DataContributor]
  contact: [Contact]
  taxonomies: [Taxonomy!]
  priorityOrder: Int
  readMeFile: String
}

class DataContributor {
  agentType: String!
  person: Person
  organization: Organization
  priorityOrder: Int
}

class DataCreator {
  agentType: String!
  person: Person
  organization: Organization
  priorityOrder: Int
}

class License {
  * referenceId: String!
  title: String!
  shortTitle: String!
  urlResource: UrlResource
  priorityOrder: Int
}

class Modality {
  name: String!
}

class Organization {
  * referenceId: String!
  name: String!
  rorSymbol: String
}

class Person {
  * referenceId: String!
  name: String!
  givenName: String!
  familyName: String!
  ORCID: String
}

class Program {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  informationWebResource: UrlResource
  priorityOrder: Int
}

class Publication {
  * referenceId: String!
  title: String
  publicationYear: String!
  author: Person!
  doiSymbol: String!
  pubmedId: String
  priorityOrder: Int
}

class Publisher {
  organization: Organization!
}

class RelatedDataCollectionProject {
  * referenceId: String!
  priorityOrder: Int
}

class Species {
  name: String!
}

class SpecimenCount {
  specimenType: SpecimenType!
  specimenCount: Int
}

class SpecimenType {
  * referenceId: String
  name: String!
  priorityOrder: Int
}

class SubProgram {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  informationWebResource: UrlResource
  program: Program
  priorityOrder: Int
}

class Taxon {
  * referenceId: String!
  cRID: CRID!
  description: String!
  symbol: String!
}

class Taxonomy {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  type: TaxonomyType!
  taxonomyNodes: [TaxonomyNode!]
}

class TaxonomyNode {
  * referenceId: String!
  title: String!
  shortTitle: String!
  description: String!
  taxon: Taxon!
  parentReferenceId: String
  childrenReferenceIds: [String!]
  color: String
  featureTypeReferenceId: String
  priorityOrder: Int
}

enum TaxonomyType {
  CLASS_HIERARCHY
}

class Technique {
  name: String!
}

class UrlResource {
  * referenceId: String!
  type: String!
  title: String!
  shortTitle: String!
  url: String!
  priorityOrder: Int
}

@enduml